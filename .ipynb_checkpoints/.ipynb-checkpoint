{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import random\n",
    "def drowboard(board):\n",
    "    print(''+board[1]+' | '+board[2]+' | '+board[3])\n",
    "    print('---+---+---')\n",
    "    print(''+board[4]+' | '+board[5]+' | '+board[6])\n",
    "    print('---+---+---')\n",
    "    print(''+board[7]+' | '+board[8]+' | '+board[8])\n",
    "def inputplayer():\n",
    "    letter =''\n",
    "    while not (letter =='X' or letter =='O'):\n",
    "        print('do you play (X OR O)?')\n",
    "        letter = input().upper()\n",
    "    if letter ='X':\n",
    "        return ['X','O']\n",
    "    else:\n",
    "        return ['O','X']\n",
    "def howgofirst():\n",
    "    if random.randint(0,1)==0:\n",
    "        return 'computer'\n",
    "    else:\n",
    "        return 'player'\n",
    "def winners(a,b):\n",
    "    return ((a[1]==b and a[2]==b and a[3]==b)or\n",
    "            (a[4]==b and a[5]==b and a[6]==b)or\n",
    "            (a[7]==b and a[8]==b and a[9]==b)or\n",
    "            (a[1]==b and a[5]==b and a[8]==b)or\n",
    "            (a[3]==b and a[5]==b and a[7]==b)or\n",
    "            (a[1]==b and a[4]==b and a[7]==b)or\n",
    "            (a[2]==b and a[5]==b and a[8]==b)or\n",
    "            (a[3]==b and a[6]==b and a[8]==b))\n",
    "\n",
    "def isfreespace(board,move):\n",
    "    return board[move]==' '\n",
    "\n",
    "def getplayermove(board):\n",
    "    move=''\n",
    "    while not in range(0,10).split() or not isfreespace(board,int(move)):\n",
    "        print('what is the next step ?')\n",
    "        move=input()\n",
    "    return int(move)\n",
    "    "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
